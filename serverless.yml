plugins:
 - serverless-offline

service: my-digitalhumani

custom:
  enterpriseTable: 'di-enterprise-${self:provider.stage}'
  projectTable: 'di-project-${self:provider.stage}'
  userTable: 'di-user-${self:provider.stage}'
  treeTable: 'di-tree-${self:provider.stage}'
  reportTable: 'di-report-${self:provider.stage}'

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: ca-central-1
  iamRoleStatements:
   - Effect: Allow
     Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
     Resource:
      - { "Fn::GetAtt": [ "EnterpriseDynamoDBTable", "Arn" ] }
      - { "Fn::GetAtt": [ "ProjectDynamoDBTable", "Arn" ] }
      - { "Fn::GetAtt": [ "UserDynamoDBTable", "Arn" ] }
      - { "Fn::GetAtt": [ "TreeDynamoDBTable", "Arn" ] }
      - { "Fn::GetAtt": [ "ReportDynamoDBTable", "Arn" ] }
  environment:
    ENTERPRISE_TABLE: ${self:custom.enterpriseTable}
    PROJECT_TABLE: ${self:custom.projectTable}
    USER_TABLE: ${self:custom.userTable}
    TREE_TABLE: ${self:custom.treeTable}
    REPORT_TABLE: ${self:custom.reportTable}

functions:
  app:
    handler: index.handler
    events:
     - http: ANY /
     - http: 'ANY {proxy+}'

resources:
  Resources:
    EnterpriseDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
         -
          AttributeName: id
          AttributeType: S
        KeySchema:
         -
          AttributeName: id
          KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.enterpriseTable}
    ProjectDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
         -
          AttributeName: id
          AttributeType: S
        KeySchema:
         -
          AttributeName: id
          KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.projectTable}
    UserDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
         -
          AttributeName: id
          AttributeType: S
        KeySchema:
         -
          AttributeName: id
          KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.userTable}
    TreeDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
         -
          AttributeName: uuid
          AttributeType: S
        KeySchema:
         -
          AttributeName: uuid
          KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.treeTable}
    ReportDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
         -
          AttributeName: id
          AttributeType: S
        KeySchema:
         -
          AttributeName: id
          KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.reportTable}
